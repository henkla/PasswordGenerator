<Window x:Class="PasswordGenerator.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PasswordGenerator"
        mc:Ignorable="d"
        Title="Password Generator"
        Height="560" Width="240" FontFamily="Segoe UI Light">


    <Grid>

        <Grid.Resources>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        </Grid.Resources>
        
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="20" />
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="20" />
        </Grid.ColumnDefinitions>
        
        <Grid.RowDefinitions>
            <RowDefinition Height="20" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="20" />
        </Grid.RowDefinitions>

        <TextBlock Grid.Column="1" Grid.Row="1" Grid.ColumnSpan="3"
                   FontSize="20" FontWeight="Bold"
                   Text="Password Generator"/>

        <TextBlock Grid.Column="1" Grid.Row="2"
                   Text="Version 1.0"/>

        <StackPanel Grid.Column="1" Grid.Row="3" 
                    Orientation="Horizontal"
                    Margin="0,15,0,0">
            <TextBlock Text="Length:" FontWeight="Bold"/>

            <TextBox IsEnabled="False" BorderThickness="0"
                     Text="{Binding ElementName=lengthSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}"/>
        </StackPanel>
        

        <Slider Grid.Column="1" Grid.Row="4" Grid.ColumnSpan="4"
                x:Name="lengthSlider" 
                Minimum="4" Maximum="256" Value="12" 
                Width="200"
                TickPlacement="None" TickFrequency="1" IsSnapToTickEnabled="True"/>

        <TextBlock Grid.Column="1" Grid.Row="5"
                   Margin="0,15,0,0"
                   Text="Casing"/>

        <ComboBox Grid.Column="1" Grid.Row="6" 
                  x:Name="casingComboBox">
            <ComboBoxItem IsSelected="True">mIxEd CaSe</ComboBoxItem>
            <ComboBoxItem>UPPER CASE</ComboBoxItem>
            <ComboBoxItem>lower case</ComboBoxItem>
        </ComboBox>

        <TextBlock Grid.Column="1" Grid.Row="7"
                   Margin="0,15,0,0"
                   Text="Include Numerics" />

        <CheckBox Grid.Column="1" Grid.Row="8" 
                  x:Name="numericsCheckbox"
                        IsChecked="True" />

        <TextBlock Grid.Column="1" Grid.Row="9"
                   Text="Include Special Characters" />

        <CheckBox Grid.Column="1" Grid.Row="10" 
                  x:Name="specialsCheckbox"
                  IsChecked="True" />

        <TextBlock Grid.Column="1" Grid.Row="11"
                   x:Name="excludeSpecialsLabel"
                   Visibility="{Binding ElementName=specialsCheckbox, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}"
                   Text="Exclude Characters" />

        <TextBox Grid.Column="1" Grid.Row="12"
                 x:Name="excludeSpecialsTextBox"
                 Visibility="{Binding ElementName=specialsCheckbox, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}"/>

        <Button Grid.Column="1" Grid.Row="13"
                x:Name="generateButton"
                Margin="0,15,0,0"
                Content="Generate Password"
                Width="200"
                Click="generateButton_Click"/>

        <TextBox x:Name="passwordTextBox"
                 Grid.Column="1" Grid.Row="14"
                 TextWrapping="Wrap"
                 Width="200"
                 Margin="0,15,0,0"
                 Height="200"
                 Text="{Binding Path=password,Mode=OneWay}" IsReadOnly="True"/>
        




    </Grid>
    <!--<StackPanel Orientation="Vertical" VerticalAlignment="Top" Width="Auto" Margin="15">

        -->
    <!-- Length picker -->
    <!--
        <Label Name="lengthLabel"
                   HorizontalAlignment="Left">
            Length
        </Label>
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Width="Auto">
            <Slider Name="lengthSlider" 
                    Minimum="4" Maximum="256" Value="8" 
                    TickPlacement="None" TickFrequency="1" IsSnapToTickEnabled="True"
                    Width="280" Margin="0,0,0,0">
            </Slider>

            <TextBox Name="lengthTextbox"
                     IsEnabled="False" BorderThickness="0"
                     Margin="0,0"
                     Text="{Binding ElementName=lengthSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}">
            </TextBox>
        </StackPanel>

        -->
    <!-- Symbols picker -->
    <!--
        <StackPanel Orientation="Horizontal" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="0,15,0,0">

            -->
    <!-- Numbers picker -->
    <!--
            <StackPanel Orientation="Vertical" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="0,0,0,0">
                <Label Name="numbersLabel"
                   HorizontalAlignment="Right">
                    Include numbers
                </Label>

                <CheckBox Name="numbersCheckbox"
                      Grid.Column="1" Grid.Row="2"
                      IsChecked="True"
                      Margin="5,0">
                </CheckBox>
            </StackPanel>

            -->
    <!-- Numbers picker -->
    <!--
            <StackPanel Orientation="Vertical" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="35,0,0,0">
                <Label Name="symbolsLabel"
                   HorizontalAlignment="Right">
                    Include symbols
                </Label>

                <CheckBox Name="symbolsCheckbox"
                      IsChecked="True"
                      Margin="5,0">
                </CheckBox>
            </StackPanel>
            
        </StackPanel>


        


        -->
    <!-- Casing picker -->
    <!--
        <StackPanel Orientation="Vertical" HorizontalAlignment="Left" Margin="0,15,0,0">
            <Label Name="casingLabel">
                Casing
            </Label>

            <ComboBox Name="casingComboBox"
                      Margin="5,0">
                <ComboBoxItem IsSelected="True">mIxEd CaSe</ComboBoxItem>
                <ComboBoxItem>UPPER CASE</ComboBoxItem>
                <ComboBoxItem>lower case</ComboBoxItem>
            </ComboBox>
        </StackPanel>

        
        -->
    <!-- Buttons and fields-->
    <!--
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="5,15,0,0">
            -->
    <!-- Generate button -->
    <!--
            <Button Name="generateButton" Padding="5">
                Generate
            </Button>

            -->
    <!-- Password field-->
    <!--
            <TextBox Name="passwordTextBox"
                 Text="{Binding Path=Password,Mode=TwoWay}" Margin="10,0,0,0" Padding="5" Width="175">
            </TextBox>

            -->
    <!-- Copy button -->
    <!--
            <Button Name="copyButton" Margin="10,0,0,0" Padding="5" Click="copyButton_Click">
                Copy
            </Button>
        </StackPanel>
        
        
    </StackPanel>-->

</Window>
